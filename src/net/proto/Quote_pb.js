// source: mmk-mds/proto/api/quote/Quote.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

// var Qot_Common_pb = require('./Qot_Common_pb.js');
// goog.object.extend(exports, Qot_Common_pb);
var mmk$mds_proto_Qot_Common_Qot_Common_pb = require('./Qot_Common_pb.js');
goog.object.extend(exports, mmk$mds_proto_Qot_Common_Qot_Common_pb);
goog.exportSymbol('proto.quote.AskBid1Update', null, global);
goog.exportSymbol('proto.quote.BasicQotC2S', null, global);
goog.exportSymbol('proto.quote.BasicQotS2C', null, global);
goog.exportSymbol('proto.quote.BasicQotUpdate', null, global);
goog.exportSymbol('proto.quote.BrokerC2S', null, global);
goog.exportSymbol('proto.quote.BrokerS2C', null, global);
goog.exportSymbol('proto.quote.BrokerUpdate', null, global);
goog.exportSymbol('proto.quote.HistoryKLC2S', null, global);
goog.exportSymbol('proto.quote.HistoryKLS2C', null, global);
goog.exportSymbol('proto.quote.IndustrySetC2S', null, global);
goog.exportSymbol('proto.quote.IndustrySetS2C', null, global);
goog.exportSymbol('proto.quote.InitConnectC2S', null, global);
goog.exportSymbol('proto.quote.InitConnectS2C', null, global);
goog.exportSymbol('proto.quote.KLUpdate', null, global);
goog.exportSymbol('proto.quote.KLineC2S', null, global);
goog.exportSymbol('proto.quote.KLineS2C', null, global);
goog.exportSymbol('proto.quote.KeepAliveC2S', null, global);
goog.exportSymbol('proto.quote.KeepAliveS2C', null, global);
goog.exportSymbol('proto.quote.LastClosePriceUpdate', null, global);
goog.exportSymbol('proto.quote.MsgType', null, global);
goog.exportSymbol('proto.quote.NewSecurityListC2S', null, global);
goog.exportSymbol('proto.quote.NewSecurityListS2C', null, global);
goog.exportSymbol('proto.quote.NewSecurityRankC2S', null, global);
goog.exportSymbol('proto.quote.NewSecurityRankS2C', null, global);
goog.exportSymbol('proto.quote.OrderBookC2S', null, global);
goog.exportSymbol('proto.quote.OrderBookS2C', null, global);
goog.exportSymbol('proto.quote.OrderBookUpdate', null, global);
goog.exportSymbol('proto.quote.OwnerPlateC2S', null, global);
goog.exportSymbol('proto.quote.OwnerPlateS2C', null, global);
goog.exportSymbol('proto.quote.PlateDetailSetC2S', null, global);
goog.exportSymbol('proto.quote.PlateDetailSetS2C', null, global);
goog.exportSymbol('proto.quote.PlateSecurityC2S', null, global);
goog.exportSymbol('proto.quote.PlateSecurityS2C', null, global);
goog.exportSymbol('proto.quote.PlateSetC2S', null, global);
goog.exportSymbol('proto.quote.PlateSetS2C', null, global);
goog.exportSymbol('proto.quote.Request', null, global);
goog.exportSymbol('proto.quote.ResType', null, global);
goog.exportSymbol('proto.quote.Response', null, global);
goog.exportSymbol('proto.quote.RiseFallStatisticsC2S', null, global);
goog.exportSymbol('proto.quote.RiseFallStatisticsS2C', null, global);
goog.exportSymbol('proto.quote.SecuritySetC2S', null, global);
goog.exportSymbol('proto.quote.SecuritySetS2C', null, global);
goog.exportSymbol('proto.quote.SecurityStatusUpdate', null, global);
goog.exportSymbol('proto.quote.SnapshotListC2S', null, global);
goog.exportSymbol('proto.quote.SnapshotListS2C', null, global);
goog.exportSymbol('proto.quote.SubC2S', null, global);
goog.exportSymbol('proto.quote.SubS2C', null, global);
goog.exportSymbol('proto.quote.TickerC2S', null, global);
goog.exportSymbol('proto.quote.TickerS2C', null, global);
goog.exportSymbol('proto.quote.TickerUpdate', null, global);
goog.exportSymbol('proto.quote.TimeShareC2S', null, global);
goog.exportSymbol('proto.quote.TimeShareList', null, global);
goog.exportSymbol('proto.quote.TimeShareListC2S', null, global);
goog.exportSymbol('proto.quote.TimeShareListS2C', null, global);
goog.exportSymbol('proto.quote.TimeShareS2C', null, global);
goog.exportSymbol('proto.quote.TimeShareUpdate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SecurityStatusUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.SecurityStatusUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SecurityStatusUpdate.displayName = 'proto.quote.SecurityStatusUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.BasicQotUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.BasicQotUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.BasicQotUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.BasicQotUpdate.displayName = 'proto.quote.BasicQotUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.BasicQotC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.BasicQotC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.BasicQotC2S.displayName = 'proto.quote.BasicQotC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.BasicQotS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.BasicQotS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.BasicQotS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.BasicQotS2C.displayName = 'proto.quote.BasicQotS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.AskBid1Update = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.AskBid1Update, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.AskBid1Update.displayName = 'proto.quote.AskBid1Update';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.LastClosePriceUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.LastClosePriceUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.LastClosePriceUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.LastClosePriceUpdate.displayName = 'proto.quote.LastClosePriceUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SnapshotListC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.SnapshotListC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SnapshotListC2S.displayName = 'proto.quote.SnapshotListC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SnapshotListS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.SnapshotListS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.SnapshotListS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SnapshotListS2C.displayName = 'proto.quote.SnapshotListS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.OrderBookC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.OrderBookC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.OrderBookC2S.displayName = 'proto.quote.OrderBookC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.OrderBookS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.OrderBookS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.OrderBookS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.OrderBookS2C.displayName = 'proto.quote.OrderBookS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.OrderBookUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.OrderBookUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.OrderBookUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.OrderBookUpdate.displayName = 'proto.quote.OrderBookUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.BrokerC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.BrokerC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.BrokerC2S.displayName = 'proto.quote.BrokerC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.BrokerS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.BrokerS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.BrokerS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.BrokerS2C.displayName = 'proto.quote.BrokerS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.BrokerUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.BrokerUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.BrokerUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.BrokerUpdate.displayName = 'proto.quote.BrokerUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TickerUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.TickerUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.TickerUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TickerUpdate.displayName = 'proto.quote.TickerUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TickerC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.TickerC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TickerC2S.displayName = 'proto.quote.TickerC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TickerS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.TickerS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.TickerS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TickerS2C.displayName = 'proto.quote.TickerS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TimeShareC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.TimeShareC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TimeShareC2S.displayName = 'proto.quote.TimeShareC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TimeShareS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.TimeShareS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.TimeShareS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TimeShareS2C.displayName = 'proto.quote.TimeShareS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TimeShareList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.TimeShareList.repeatedFields_, null);
};
goog.inherits(proto.quote.TimeShareList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TimeShareList.displayName = 'proto.quote.TimeShareList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TimeShareListC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.TimeShareListC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TimeShareListC2S.displayName = 'proto.quote.TimeShareListC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TimeShareListS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.TimeShareListS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.TimeShareListS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TimeShareListS2C.displayName = 'proto.quote.TimeShareListS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.TimeShareUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.TimeShareUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.TimeShareUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.TimeShareUpdate.displayName = 'proto.quote.TimeShareUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.KLineC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.KLineC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.KLineC2S.displayName = 'proto.quote.KLineC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.KLineS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.KLineS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.KLineS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.KLineS2C.displayName = 'proto.quote.KLineS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.HistoryKLC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.HistoryKLC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.HistoryKLC2S.displayName = 'proto.quote.HistoryKLC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.HistoryKLS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.HistoryKLS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.HistoryKLS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.HistoryKLS2C.displayName = 'proto.quote.HistoryKLS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.KLUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.KLUpdate.repeatedFields_, null);
};
goog.inherits(proto.quote.KLUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.KLUpdate.displayName = 'proto.quote.KLUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.KeepAliveC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.KeepAliveC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.KeepAliveC2S.displayName = 'proto.quote.KeepAliveC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.KeepAliveS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.KeepAliveS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.KeepAliveS2C.displayName = 'proto.quote.KeepAliveS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.RiseFallStatisticsC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.RiseFallStatisticsC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.RiseFallStatisticsC2S.displayName = 'proto.quote.RiseFallStatisticsC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.RiseFallStatisticsS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.RiseFallStatisticsS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.RiseFallStatisticsS2C.displayName = 'proto.quote.RiseFallStatisticsS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SecuritySetC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.SecuritySetC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SecuritySetC2S.displayName = 'proto.quote.SecuritySetC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SecuritySetS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.SecuritySetS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.SecuritySetS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SecuritySetS2C.displayName = 'proto.quote.SecuritySetS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.IndustrySetC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.IndustrySetC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.IndustrySetC2S.displayName = 'proto.quote.IndustrySetC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.IndustrySetS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.IndustrySetS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.IndustrySetS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.IndustrySetS2C.displayName = 'proto.quote.IndustrySetS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.PlateSetC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.PlateSetC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.PlateSetC2S.displayName = 'proto.quote.PlateSetC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.PlateSetS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.PlateSetS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.PlateSetS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.PlateSetS2C.displayName = 'proto.quote.PlateSetS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.PlateDetailSetC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.PlateDetailSetC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.PlateDetailSetC2S.displayName = 'proto.quote.PlateDetailSetC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.PlateDetailSetS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.PlateDetailSetS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.PlateDetailSetS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.PlateDetailSetS2C.displayName = 'proto.quote.PlateDetailSetS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.PlateSecurityC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.PlateSecurityC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.PlateSecurityC2S.displayName = 'proto.quote.PlateSecurityC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.PlateSecurityS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.PlateSecurityS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.PlateSecurityS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.PlateSecurityS2C.displayName = 'proto.quote.PlateSecurityS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.OwnerPlateC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.OwnerPlateC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.OwnerPlateC2S.displayName = 'proto.quote.OwnerPlateC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.OwnerPlateS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.OwnerPlateS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.OwnerPlateS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.OwnerPlateS2C.displayName = 'proto.quote.OwnerPlateS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.NewSecurityListC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.NewSecurityListC2S.repeatedFields_, null);
};
goog.inherits(proto.quote.NewSecurityListC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.NewSecurityListC2S.displayName = 'proto.quote.NewSecurityListC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.NewSecurityListS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.NewSecurityListS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.NewSecurityListS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.NewSecurityListS2C.displayName = 'proto.quote.NewSecurityListS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.NewSecurityRankC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.NewSecurityRankC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.NewSecurityRankC2S.displayName = 'proto.quote.NewSecurityRankC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.NewSecurityRankS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.NewSecurityRankS2C.repeatedFields_, null);
};
goog.inherits(proto.quote.NewSecurityRankS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.NewSecurityRankS2C.displayName = 'proto.quote.NewSecurityRankS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.Request.displayName = 'proto.quote.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.Response.displayName = 'proto.quote.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.InitConnectC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.InitConnectC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.InitConnectC2S.displayName = 'proto.quote.InitConnectC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.InitConnectS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.InitConnectS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.InitConnectS2C.displayName = 'proto.quote.InitConnectS2C';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SubC2S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quote.SubC2S.repeatedFields_, null);
};
goog.inherits(proto.quote.SubC2S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SubC2S.displayName = 'proto.quote.SubC2S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quote.SubS2C = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quote.SubS2C, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quote.SubS2C.displayName = 'proto.quote.SubS2C';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SecurityStatusUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SecurityStatusUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SecurityStatusUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SecurityStatusUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SecurityStatusUpdate}
 */
proto.quote.SecurityStatusUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SecurityStatusUpdate;
  return proto.quote.SecurityStatusUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SecurityStatusUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SecurityStatusUpdate}
 */
proto.quote.SecurityStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SecurityStatusUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SecurityStatusUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SecurityStatusUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SecurityStatusUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.SecurityStatusUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.SecurityStatusUpdate} returns this
*/
proto.quote.SecurityStatusUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.SecurityStatusUpdate} returns this
 */
proto.quote.SecurityStatusUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.SecurityStatusUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.quote.SecurityStatusUpdate.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.SecurityStatusUpdate} returns this
 */
proto.quote.SecurityStatusUpdate.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.BasicQotUpdate.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.BasicQotUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.BasicQotUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.BasicQotUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BasicQotUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    basicqotlistList: jspb.Message.toObjectList(msg.getBasicqotlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.BasicQotUpdate}
 */
proto.quote.BasicQotUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.BasicQotUpdate;
  return proto.quote.BasicQotUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.BasicQotUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.BasicQotUpdate}
 */
proto.quote.BasicQotUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot.deserializeBinaryFromReader);
      msg.addBasicqotlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.BasicQotUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.BasicQotUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.BasicQotUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BasicQotUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasicqotlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.BasicQot basicQotList = 1;
 * @return {!Array<!proto.Qot_Common.BasicQot>}
 */
proto.quote.BasicQotUpdate.prototype.getBasicqotlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.BasicQot>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.BasicQot>} value
 * @return {!proto.quote.BasicQotUpdate} returns this
*/
proto.quote.BasicQotUpdate.prototype.setBasicqotlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.BasicQot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.BasicQot}
 */
proto.quote.BasicQotUpdate.prototype.addBasicqotlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.BasicQot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.BasicQotUpdate} returns this
 */
proto.quote.BasicQotUpdate.prototype.clearBasicqotlistList = function() {
  return this.setBasicqotlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.BasicQotC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.BasicQotC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.BasicQotC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BasicQotC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylist: (f = msg.getSecuritylist()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.BasicQotC2S}
 */
proto.quote.BasicQotC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.BasicQotC2S;
  return proto.quote.BasicQotC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.BasicQotC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.BasicQotC2S}
 */
proto.quote.BasicQotC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.deserializeBinaryFromReader);
      msg.setSecuritylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.BasicQotC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.BasicQotC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.BasicQotC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BasicQotC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.SecurityList securityList = 1;
 * @return {?proto.Qot_Common.SecurityList}
 */
proto.quote.BasicQotC2S.prototype.getSecuritylist = function() {
  return /** @type{?proto.Qot_Common.SecurityList} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList, 1));
};


/**
 * @param {?proto.Qot_Common.SecurityList|undefined} value
 * @return {!proto.quote.BasicQotC2S} returns this
*/
proto.quote.BasicQotC2S.prototype.setSecuritylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.BasicQotC2S} returns this
 */
proto.quote.BasicQotC2S.prototype.clearSecuritylist = function() {
  return this.setSecuritylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.BasicQotC2S.prototype.hasSecuritylist = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.BasicQotS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.BasicQotS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.BasicQotS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.BasicQotS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BasicQotS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    basicqotlistList: jspb.Message.toObjectList(msg.getBasicqotlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.BasicQotS2C}
 */
proto.quote.BasicQotS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.BasicQotS2C;
  return proto.quote.BasicQotS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.BasicQotS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.BasicQotS2C}
 */
proto.quote.BasicQotS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot.deserializeBinaryFromReader);
      msg.addBasicqotlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.BasicQotS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.BasicQotS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.BasicQotS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BasicQotS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasicqotlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.BasicQot basicQotList = 1;
 * @return {!Array<!proto.Qot_Common.BasicQot>}
 */
proto.quote.BasicQotS2C.prototype.getBasicqotlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.BasicQot>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.BasicQot, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.BasicQot>} value
 * @return {!proto.quote.BasicQotS2C} returns this
*/
proto.quote.BasicQotS2C.prototype.setBasicqotlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.BasicQot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.BasicQot}
 */
proto.quote.BasicQotS2C.prototype.addBasicqotlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.BasicQot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.BasicQotS2C} returns this
 */
proto.quote.BasicQotS2C.prototype.clearBasicqotlistList = function() {
  return this.setBasicqotlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.AskBid1Update.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.AskBid1Update.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.AskBid1Update} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.AskBid1Update.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    askprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    bidprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    askvol: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bidvol: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.AskBid1Update}
 */
proto.quote.AskBid1Update.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.AskBid1Update;
  return proto.quote.AskBid1Update.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.AskBid1Update} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.AskBid1Update}
 */
proto.quote.AskBid1Update.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAskprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBidprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAskvol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBidvol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.AskBid1Update.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.AskBid1Update.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.AskBid1Update} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.AskBid1Update.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getAskprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getBidprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getAskvol();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBidvol();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.AskBid1Update.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.AskBid1Update} returns this
*/
proto.quote.AskBid1Update.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.AskBid1Update} returns this
 */
proto.quote.AskBid1Update.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.AskBid1Update.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double askPrice = 2;
 * @return {number}
 */
proto.quote.AskBid1Update.prototype.getAskprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.quote.AskBid1Update} returns this
 */
proto.quote.AskBid1Update.prototype.setAskprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double bidPrice = 3;
 * @return {number}
 */
proto.quote.AskBid1Update.prototype.getBidprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.quote.AskBid1Update} returns this
 */
proto.quote.AskBid1Update.prototype.setBidprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int64 askVol = 4;
 * @return {number}
 */
proto.quote.AskBid1Update.prototype.getAskvol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.AskBid1Update} returns this
 */
proto.quote.AskBid1Update.prototype.setAskvol = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 bidVol = 5;
 * @return {number}
 */
proto.quote.AskBid1Update.prototype.getBidvol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.AskBid1Update} returns this
 */
proto.quote.AskBid1Update.prototype.setBidvol = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.LastClosePriceUpdate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.LastClosePriceUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.LastClosePriceUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.LastClosePriceUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.LastClosePriceUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.LastClosePrice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.LastClosePriceUpdate}
 */
proto.quote.LastClosePriceUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.LastClosePriceUpdate;
  return proto.quote.LastClosePriceUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.LastClosePriceUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.LastClosePriceUpdate}
 */
proto.quote.LastClosePriceUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.LastClosePrice;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.LastClosePrice.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.LastClosePriceUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.LastClosePriceUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.LastClosePriceUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.LastClosePriceUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.LastClosePrice.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.LastClosePriceUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.LastClosePriceUpdate} returns this
*/
proto.quote.LastClosePriceUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.LastClosePriceUpdate} returns this
 */
proto.quote.LastClosePriceUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.LastClosePriceUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.LastClosePrice list = 2;
 * @return {!Array<!proto.Qot_Common.LastClosePrice>}
 */
proto.quote.LastClosePriceUpdate.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.LastClosePrice>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.LastClosePrice, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.LastClosePrice>} value
 * @return {!proto.quote.LastClosePriceUpdate} returns this
*/
proto.quote.LastClosePriceUpdate.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.LastClosePrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.LastClosePrice}
 */
proto.quote.LastClosePriceUpdate.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.LastClosePrice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.LastClosePriceUpdate} returns this
 */
proto.quote.LastClosePriceUpdate.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SnapshotListC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SnapshotListC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SnapshotListC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SnapshotListC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylist: (f = msg.getSecuritylist()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SnapshotListC2S}
 */
proto.quote.SnapshotListC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SnapshotListC2S;
  return proto.quote.SnapshotListC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SnapshotListC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SnapshotListC2S}
 */
proto.quote.SnapshotListC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.deserializeBinaryFromReader);
      msg.setSecuritylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SnapshotListC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SnapshotListC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SnapshotListC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SnapshotListC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.SecurityList securityList = 1;
 * @return {?proto.Qot_Common.SecurityList}
 */
proto.quote.SnapshotListC2S.prototype.getSecuritylist = function() {
  return /** @type{?proto.Qot_Common.SecurityList} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList, 1));
};


/**
 * @param {?proto.Qot_Common.SecurityList|undefined} value
 * @return {!proto.quote.SnapshotListC2S} returns this
*/
proto.quote.SnapshotListC2S.prototype.setSecuritylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.SnapshotListC2S} returns this
 */
proto.quote.SnapshotListC2S.prototype.clearSecuritylist = function() {
  return this.setSecuritylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.SnapshotListC2S.prototype.hasSecuritylist = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.SnapshotListS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SnapshotListS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SnapshotListS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SnapshotListS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SnapshotListS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SnapshotListS2C}
 */
proto.quote.SnapshotListS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SnapshotListS2C;
  return proto.quote.SnapshotListS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SnapshotListS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SnapshotListS2C}
 */
proto.quote.SnapshotListS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SnapshotListS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SnapshotListS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SnapshotListS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SnapshotListS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.Snapshot list = 1;
 * @return {!Array<!proto.Qot_Common.Snapshot>}
 */
proto.quote.SnapshotListS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.Snapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.Snapshot>} value
 * @return {!proto.quote.SnapshotListS2C} returns this
*/
proto.quote.SnapshotListS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.Snapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Snapshot}
 */
proto.quote.SnapshotListS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.Snapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.SnapshotListS2C} returns this
 */
proto.quote.SnapshotListS2C.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.OrderBookC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.OrderBookC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.OrderBookC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OrderBookC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    num: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.OrderBookC2S}
 */
proto.quote.OrderBookC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.OrderBookC2S;
  return proto.quote.OrderBookC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.OrderBookC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.OrderBookC2S}
 */
proto.quote.OrderBookC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.OrderBookC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.OrderBookC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.OrderBookC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OrderBookC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.OrderBookC2S.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.OrderBookC2S} returns this
*/
proto.quote.OrderBookC2S.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.OrderBookC2S} returns this
 */
proto.quote.OrderBookC2S.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.OrderBookC2S.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 num = 2;
 * @return {number}
 */
proto.quote.OrderBookC2S.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.OrderBookC2S} returns this
 */
proto.quote.OrderBookC2S.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.OrderBookS2C.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.OrderBookS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.OrderBookS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.OrderBookS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OrderBookS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    orderbookasklistList: jspb.Message.toObjectList(msg.getOrderbookasklistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.toObject, includeInstance),
    orderbookbidlistList: jspb.Message.toObjectList(msg.getOrderbookbidlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.OrderBookS2C}
 */
proto.quote.OrderBookS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.OrderBookS2C;
  return proto.quote.OrderBookS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.OrderBookS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.OrderBookS2C}
 */
proto.quote.OrderBookS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.deserializeBinaryFromReader);
      msg.addOrderbookasklist(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.deserializeBinaryFromReader);
      msg.addOrderbookbidlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.OrderBookS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.OrderBookS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.OrderBookS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OrderBookS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getOrderbookasklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.serializeBinaryToWriter
    );
  }
  f = message.getOrderbookbidlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.OrderBookS2C.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.OrderBookS2C} returns this
*/
proto.quote.OrderBookS2C.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.OrderBookS2C} returns this
 */
proto.quote.OrderBookS2C.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.OrderBookS2C.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.OrderBook orderBookAskList = 2;
 * @return {!Array<!proto.Qot_Common.OrderBook>}
 */
proto.quote.OrderBookS2C.prototype.getOrderbookasklistList = function() {
  return /** @type{!Array<!proto.Qot_Common.OrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.OrderBook>} value
 * @return {!proto.quote.OrderBookS2C} returns this
*/
proto.quote.OrderBookS2C.prototype.setOrderbookasklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.OrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.OrderBook}
 */
proto.quote.OrderBookS2C.prototype.addOrderbookasklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.OrderBook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.OrderBookS2C} returns this
 */
proto.quote.OrderBookS2C.prototype.clearOrderbookasklistList = function() {
  return this.setOrderbookasklistList([]);
};


/**
 * repeated Qot_Common.OrderBook orderBookBidList = 3;
 * @return {!Array<!proto.Qot_Common.OrderBook>}
 */
proto.quote.OrderBookS2C.prototype.getOrderbookbidlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.OrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook, 3));
};


/**
 * @param {!Array<!proto.Qot_Common.OrderBook>} value
 * @return {!proto.quote.OrderBookS2C} returns this
*/
proto.quote.OrderBookS2C.prototype.setOrderbookbidlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Qot_Common.OrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.OrderBook}
 */
proto.quote.OrderBookS2C.prototype.addOrderbookbidlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Qot_Common.OrderBook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.OrderBookS2C} returns this
 */
proto.quote.OrderBookS2C.prototype.clearOrderbookbidlistList = function() {
  return this.setOrderbookbidlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.OrderBookUpdate.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.OrderBookUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.OrderBookUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.OrderBookUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OrderBookUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    orderbookasklistList: jspb.Message.toObjectList(msg.getOrderbookasklistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.toObject, includeInstance),
    orderbookbidlistList: jspb.Message.toObjectList(msg.getOrderbookbidlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.OrderBookUpdate}
 */
proto.quote.OrderBookUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.OrderBookUpdate;
  return proto.quote.OrderBookUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.OrderBookUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.OrderBookUpdate}
 */
proto.quote.OrderBookUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.deserializeBinaryFromReader);
      msg.addOrderbookasklist(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.deserializeBinaryFromReader);
      msg.addOrderbookbidlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.OrderBookUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.OrderBookUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.OrderBookUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OrderBookUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getOrderbookasklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.serializeBinaryToWriter
    );
  }
  f = message.getOrderbookbidlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.OrderBookUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.OrderBookUpdate} returns this
*/
proto.quote.OrderBookUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.OrderBookUpdate} returns this
 */
proto.quote.OrderBookUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.OrderBookUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.OrderBook orderBookAskList = 2;
 * @return {!Array<!proto.Qot_Common.OrderBook>}
 */
proto.quote.OrderBookUpdate.prototype.getOrderbookasklistList = function() {
  return /** @type{!Array<!proto.Qot_Common.OrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.OrderBook>} value
 * @return {!proto.quote.OrderBookUpdate} returns this
*/
proto.quote.OrderBookUpdate.prototype.setOrderbookasklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.OrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.OrderBook}
 */
proto.quote.OrderBookUpdate.prototype.addOrderbookasklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.OrderBook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.OrderBookUpdate} returns this
 */
proto.quote.OrderBookUpdate.prototype.clearOrderbookasklistList = function() {
  return this.setOrderbookasklistList([]);
};


/**
 * repeated Qot_Common.OrderBook orderBookBidList = 3;
 * @return {!Array<!proto.Qot_Common.OrderBook>}
 */
proto.quote.OrderBookUpdate.prototype.getOrderbookbidlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.OrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.OrderBook, 3));
};


/**
 * @param {!Array<!proto.Qot_Common.OrderBook>} value
 * @return {!proto.quote.OrderBookUpdate} returns this
*/
proto.quote.OrderBookUpdate.prototype.setOrderbookbidlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Qot_Common.OrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.OrderBook}
 */
proto.quote.OrderBookUpdate.prototype.addOrderbookbidlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Qot_Common.OrderBook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.OrderBookUpdate} returns this
 */
proto.quote.OrderBookUpdate.prototype.clearOrderbookbidlistList = function() {
  return this.setOrderbookbidlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.BrokerC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.BrokerC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.BrokerC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BrokerC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.BrokerC2S}
 */
proto.quote.BrokerC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.BrokerC2S;
  return proto.quote.BrokerC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.BrokerC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.BrokerC2S}
 */
proto.quote.BrokerC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.BrokerC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.BrokerC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.BrokerC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BrokerC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.BrokerC2S.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.BrokerC2S} returns this
*/
proto.quote.BrokerC2S.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.BrokerC2S} returns this
 */
proto.quote.BrokerC2S.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.BrokerC2S.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.BrokerS2C.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.BrokerS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.BrokerS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.BrokerS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BrokerS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    brokerasklistList: jspb.Message.toObjectList(msg.getBrokerasklistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.toObject, includeInstance),
    brokerbidlistList: jspb.Message.toObjectList(msg.getBrokerbidlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.BrokerS2C}
 */
proto.quote.BrokerS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.BrokerS2C;
  return proto.quote.BrokerS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.BrokerS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.BrokerS2C}
 */
proto.quote.BrokerS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.deserializeBinaryFromReader);
      msg.addBrokerasklist(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.deserializeBinaryFromReader);
      msg.addBrokerbidlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.BrokerS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.BrokerS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.BrokerS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BrokerS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getBrokerasklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.serializeBinaryToWriter
    );
  }
  f = message.getBrokerbidlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.BrokerS2C.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.BrokerS2C} returns this
*/
proto.quote.BrokerS2C.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.BrokerS2C} returns this
 */
proto.quote.BrokerS2C.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.BrokerS2C.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.Broker brokerAskList = 2;
 * @return {!Array<!proto.Qot_Common.Broker>}
 */
proto.quote.BrokerS2C.prototype.getBrokerasklistList = function() {
  return /** @type{!Array<!proto.Qot_Common.Broker>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.Broker>} value
 * @return {!proto.quote.BrokerS2C} returns this
*/
proto.quote.BrokerS2C.prototype.setBrokerasklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.Broker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Broker}
 */
proto.quote.BrokerS2C.prototype.addBrokerasklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.Broker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.BrokerS2C} returns this
 */
proto.quote.BrokerS2C.prototype.clearBrokerasklistList = function() {
  return this.setBrokerasklistList([]);
};


/**
 * repeated Qot_Common.Broker brokerBidList = 3;
 * @return {!Array<!proto.Qot_Common.Broker>}
 */
proto.quote.BrokerS2C.prototype.getBrokerbidlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.Broker>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker, 3));
};


/**
 * @param {!Array<!proto.Qot_Common.Broker>} value
 * @return {!proto.quote.BrokerS2C} returns this
*/
proto.quote.BrokerS2C.prototype.setBrokerbidlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Qot_Common.Broker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Broker}
 */
proto.quote.BrokerS2C.prototype.addBrokerbidlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Qot_Common.Broker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.BrokerS2C} returns this
 */
proto.quote.BrokerS2C.prototype.clearBrokerbidlistList = function() {
  return this.setBrokerbidlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.BrokerUpdate.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.BrokerUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.BrokerUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.BrokerUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BrokerUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    side: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    brokerlistList: jspb.Message.toObjectList(msg.getBrokerlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.BrokerUpdate}
 */
proto.quote.BrokerUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.BrokerUpdate;
  return proto.quote.BrokerUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.BrokerUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.BrokerUpdate}
 */
proto.quote.BrokerUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSide(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.deserializeBinaryFromReader);
      msg.addBrokerlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.BrokerUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.BrokerUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.BrokerUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.BrokerUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getSide();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBrokerlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.BrokerUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.BrokerUpdate} returns this
*/
proto.quote.BrokerUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.BrokerUpdate} returns this
 */
proto.quote.BrokerUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.BrokerUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool Side = 2;
 * @return {boolean}
 */
proto.quote.BrokerUpdate.prototype.getSide = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quote.BrokerUpdate} returns this
 */
proto.quote.BrokerUpdate.prototype.setSide = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated Qot_Common.Broker brokerList = 3;
 * @return {!Array<!proto.Qot_Common.Broker>}
 */
proto.quote.BrokerUpdate.prototype.getBrokerlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.Broker>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Broker, 3));
};


/**
 * @param {!Array<!proto.Qot_Common.Broker>} value
 * @return {!proto.quote.BrokerUpdate} returns this
*/
proto.quote.BrokerUpdate.prototype.setBrokerlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Qot_Common.Broker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Broker}
 */
proto.quote.BrokerUpdate.prototype.addBrokerlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Qot_Common.Broker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.BrokerUpdate} returns this
 */
proto.quote.BrokerUpdate.prototype.clearBrokerlistList = function() {
  return this.setBrokerlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.TickerUpdate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TickerUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TickerUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TickerUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TickerUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    tickerlistList: jspb.Message.toObjectList(msg.getTickerlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TickerUpdate}
 */
proto.quote.TickerUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TickerUpdate;
  return proto.quote.TickerUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TickerUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TickerUpdate}
 */
proto.quote.TickerUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker.deserializeBinaryFromReader);
      msg.addTickerlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TickerUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TickerUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TickerUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TickerUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getTickerlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TickerUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TickerUpdate} returns this
*/
proto.quote.TickerUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TickerUpdate} returns this
 */
proto.quote.TickerUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TickerUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.Ticker tickerList = 2;
 * @return {!Array<!proto.Qot_Common.Ticker>}
 */
proto.quote.TickerUpdate.prototype.getTickerlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.Ticker>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.Ticker>} value
 * @return {!proto.quote.TickerUpdate} returns this
*/
proto.quote.TickerUpdate.prototype.setTickerlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.Ticker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Ticker}
 */
proto.quote.TickerUpdate.prototype.addTickerlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.Ticker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.TickerUpdate} returns this
 */
proto.quote.TickerUpdate.prototype.clearTickerlistList = function() {
  return this.setTickerlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TickerC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TickerC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TickerC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TickerC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    lastseqno: jspb.Message.getFieldWithDefault(msg, 2, 0),
    num: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TickerC2S}
 */
proto.quote.TickerC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TickerC2S;
  return proto.quote.TickerC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TickerC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TickerC2S}
 */
proto.quote.TickerC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastseqno(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TickerC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TickerC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TickerC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TickerC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getLastseqno();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TickerC2S.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TickerC2S} returns this
*/
proto.quote.TickerC2S.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TickerC2S} returns this
 */
proto.quote.TickerC2S.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TickerC2S.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 lastSeqNo = 2;
 * @return {number}
 */
proto.quote.TickerC2S.prototype.getLastseqno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.TickerC2S} returns this
 */
proto.quote.TickerC2S.prototype.setLastseqno = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 num = 3;
 * @return {number}
 */
proto.quote.TickerC2S.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.TickerC2S} returns this
 */
proto.quote.TickerC2S.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.TickerS2C.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TickerS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TickerS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TickerS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TickerS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TickerS2C}
 */
proto.quote.TickerS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TickerS2C;
  return proto.quote.TickerS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TickerS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TickerS2C}
 */
proto.quote.TickerS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TickerS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TickerS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TickerS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TickerS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TickerS2C.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TickerS2C} returns this
*/
proto.quote.TickerS2C.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TickerS2C} returns this
 */
proto.quote.TickerS2C.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TickerS2C.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.Ticker list = 2;
 * @return {!Array<!proto.Qot_Common.Ticker>}
 */
proto.quote.TickerS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.Ticker>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Ticker, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.Ticker>} value
 * @return {!proto.quote.TickerS2C} returns this
*/
proto.quote.TickerS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.Ticker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Ticker}
 */
proto.quote.TickerS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.Ticker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.TickerS2C} returns this
 */
proto.quote.TickerS2C.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TimeShareC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TimeShareC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TimeShareC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TimeShareC2S}
 */
proto.quote.TimeShareC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TimeShareC2S;
  return proto.quote.TimeShareC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TimeShareC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TimeShareC2S}
 */
proto.quote.TimeShareC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TimeShareC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TimeShareC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TimeShareC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TimeShareC2S.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TimeShareC2S} returns this
*/
proto.quote.TimeShareC2S.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TimeShareC2S} returns this
 */
proto.quote.TimeShareC2S.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TimeShareC2S.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.TimeShareS2C.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TimeShareS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TimeShareS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TimeShareS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TimeShareS2C}
 */
proto.quote.TimeShareS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TimeShareS2C;
  return proto.quote.TimeShareS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TimeShareS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TimeShareS2C}
 */
proto.quote.TimeShareS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TimeShareS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TimeShareS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TimeShareS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TimeShareS2C.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TimeShareS2C} returns this
*/
proto.quote.TimeShareS2C.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TimeShareS2C} returns this
 */
proto.quote.TimeShareS2C.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TimeShareS2C.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.TimeShare list = 2;
 * @return {!Array<!proto.Qot_Common.TimeShare>}
 */
proto.quote.TimeShareS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.TimeShare>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.TimeShare>} value
 * @return {!proto.quote.TimeShareS2C} returns this
*/
proto.quote.TimeShareS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.TimeShare=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.TimeShare}
 */
proto.quote.TimeShareS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.TimeShare, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.TimeShareS2C} returns this
 */
proto.quote.TimeShareS2C.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.TimeShareList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TimeShareList.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TimeShareList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TimeShareList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareList.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TimeShareList}
 */
proto.quote.TimeShareList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TimeShareList;
  return proto.quote.TimeShareList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TimeShareList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TimeShareList}
 */
proto.quote.TimeShareList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TimeShareList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TimeShareList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TimeShareList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TimeShareList.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TimeShareList} returns this
*/
proto.quote.TimeShareList.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TimeShareList} returns this
 */
proto.quote.TimeShareList.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TimeShareList.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.TimeShare list = 2;
 * @return {!Array<!proto.Qot_Common.TimeShare>}
 */
proto.quote.TimeShareList.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.TimeShare>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.TimeShare>} value
 * @return {!proto.quote.TimeShareList} returns this
*/
proto.quote.TimeShareList.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.TimeShare=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.TimeShare}
 */
proto.quote.TimeShareList.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.TimeShare, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.TimeShareList} returns this
 */
proto.quote.TimeShareList.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TimeShareListC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TimeShareListC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TimeShareListC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareListC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylist: (f = msg.getSecuritylist()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TimeShareListC2S}
 */
proto.quote.TimeShareListC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TimeShareListC2S;
  return proto.quote.TimeShareListC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TimeShareListC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TimeShareListC2S}
 */
proto.quote.TimeShareListC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.deserializeBinaryFromReader);
      msg.setSecuritylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TimeShareListC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TimeShareListC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TimeShareListC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareListC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.SecurityList securityList = 1;
 * @return {?proto.Qot_Common.SecurityList}
 */
proto.quote.TimeShareListC2S.prototype.getSecuritylist = function() {
  return /** @type{?proto.Qot_Common.SecurityList} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList, 1));
};


/**
 * @param {?proto.Qot_Common.SecurityList|undefined} value
 * @return {!proto.quote.TimeShareListC2S} returns this
*/
proto.quote.TimeShareListC2S.prototype.setSecuritylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TimeShareListC2S} returns this
 */
proto.quote.TimeShareListC2S.prototype.clearSecuritylist = function() {
  return this.setSecuritylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TimeShareListC2S.prototype.hasSecuritylist = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.TimeShareListS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TimeShareListS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TimeShareListS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TimeShareListS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareListS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.quote.TimeShareList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TimeShareListS2C}
 */
proto.quote.TimeShareListS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TimeShareListS2C;
  return proto.quote.TimeShareListS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TimeShareListS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TimeShareListS2C}
 */
proto.quote.TimeShareListS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quote.TimeShareList;
      reader.readMessage(value,proto.quote.TimeShareList.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TimeShareListS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TimeShareListS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TimeShareListS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareListS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quote.TimeShareList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TimeShareList list = 1;
 * @return {!Array<!proto.quote.TimeShareList>}
 */
proto.quote.TimeShareListS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.quote.TimeShareList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quote.TimeShareList, 1));
};


/**
 * @param {!Array<!proto.quote.TimeShareList>} value
 * @return {!proto.quote.TimeShareListS2C} returns this
*/
proto.quote.TimeShareListS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quote.TimeShareList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quote.TimeShareList}
 */
proto.quote.TimeShareListS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quote.TimeShareList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.TimeShareListS2C} returns this
 */
proto.quote.TimeShareListS2C.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.TimeShareUpdate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.TimeShareUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.TimeShareUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.TimeShareUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    rtlistList: jspb.Message.toObjectList(msg.getRtlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.TimeShareUpdate}
 */
proto.quote.TimeShareUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.TimeShareUpdate;
  return proto.quote.TimeShareUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.TimeShareUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.TimeShareUpdate}
 */
proto.quote.TimeShareUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.deserializeBinaryFromReader);
      msg.addRtlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.TimeShareUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.TimeShareUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.TimeShareUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.TimeShareUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getRtlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.TimeShareUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.TimeShareUpdate} returns this
*/
proto.quote.TimeShareUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.TimeShareUpdate} returns this
 */
proto.quote.TimeShareUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.TimeShareUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.TimeShare rtList = 2;
 * @return {!Array<!proto.Qot_Common.TimeShare>}
 */
proto.quote.TimeShareUpdate.prototype.getRtlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.TimeShare>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.TimeShare, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.TimeShare>} value
 * @return {!proto.quote.TimeShareUpdate} returns this
*/
proto.quote.TimeShareUpdate.prototype.setRtlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.TimeShare=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.TimeShare}
 */
proto.quote.TimeShareUpdate.prototype.addRtlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.TimeShare, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.TimeShareUpdate} returns this
 */
proto.quote.TimeShareUpdate.prototype.clearRtlistList = function() {
  return this.setRtlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.KLineC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.KLineC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.KLineC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KLineC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    rehabtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kltype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    reqnum: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.KLineC2S}
 */
proto.quote.KLineC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.KLineC2S;
  return proto.quote.KLineC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.KLineC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.KLineC2S}
 */
proto.quote.KLineC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRehabtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKltype(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReqnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.KLineC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.KLineC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.KLineC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KLineC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRehabtype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKltype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getReqnum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 rehabType = 1;
 * @return {number}
 */
proto.quote.KLineC2S.prototype.getRehabtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KLineC2S} returns this
 */
proto.quote.KLineC2S.prototype.setRehabtype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 klType = 2;
 * @return {number}
 */
proto.quote.KLineC2S.prototype.getKltype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KLineC2S} returns this
 */
proto.quote.KLineC2S.prototype.setKltype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Qot_Common.Security security = 3;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.KLineC2S.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 3));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.KLineC2S} returns this
*/
proto.quote.KLineC2S.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.KLineC2S} returns this
 */
proto.quote.KLineC2S.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.KLineC2S.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 reqNum = 4;
 * @return {number}
 */
proto.quote.KLineC2S.prototype.getReqnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KLineC2S} returns this
 */
proto.quote.KLineC2S.prototype.setReqnum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.KLineS2C.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.KLineS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.KLineS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.KLineS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KLineS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.KLineS2C}
 */
proto.quote.KLineS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.KLineS2C;
  return proto.quote.KLineS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.KLineS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.KLineS2C}
 */
proto.quote.KLineS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.KLineS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.KLineS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.KLineS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KLineS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.KLineS2C.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.KLineS2C} returns this
*/
proto.quote.KLineS2C.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.KLineS2C} returns this
 */
proto.quote.KLineS2C.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.KLineS2C.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.KLine list = 2;
 * @return {!Array<!proto.Qot_Common.KLine>}
 */
proto.quote.KLineS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.KLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.KLine>} value
 * @return {!proto.quote.KLineS2C} returns this
*/
proto.quote.KLineS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.KLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.KLine}
 */
proto.quote.KLineS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.KLine, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.KLineS2C} returns this
 */
proto.quote.KLineS2C.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.HistoryKLC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.HistoryKLC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.HistoryKLC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.HistoryKLC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    rehabtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kltype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    begintime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    maxackklnum: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.HistoryKLC2S}
 */
proto.quote.HistoryKLC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.HistoryKLC2S;
  return proto.quote.HistoryKLC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.HistoryKLC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.HistoryKLC2S}
 */
proto.quote.HistoryKLC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRehabtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKltype(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBegintime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxackklnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.HistoryKLC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.HistoryKLC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.HistoryKLC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.HistoryKLC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRehabtype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKltype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getBegintime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMaxackklnum();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 rehabType = 1;
 * @return {number}
 */
proto.quote.HistoryKLC2S.prototype.getRehabtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.HistoryKLC2S} returns this
 */
proto.quote.HistoryKLC2S.prototype.setRehabtype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 klType = 2;
 * @return {number}
 */
proto.quote.HistoryKLC2S.prototype.getKltype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.HistoryKLC2S} returns this
 */
proto.quote.HistoryKLC2S.prototype.setKltype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Qot_Common.Security security = 3;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.HistoryKLC2S.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 3));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.HistoryKLC2S} returns this
*/
proto.quote.HistoryKLC2S.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.HistoryKLC2S} returns this
 */
proto.quote.HistoryKLC2S.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.HistoryKLC2S.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string beginTime = 4;
 * @return {string}
 */
proto.quote.HistoryKLC2S.prototype.getBegintime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quote.HistoryKLC2S} returns this
 */
proto.quote.HistoryKLC2S.prototype.setBegintime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string endTime = 5;
 * @return {string}
 */
proto.quote.HistoryKLC2S.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.quote.HistoryKLC2S} returns this
 */
proto.quote.HistoryKLC2S.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 maxAckKLNum = 6;
 * @return {number}
 */
proto.quote.HistoryKLC2S.prototype.getMaxackklnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.HistoryKLC2S} returns this
 */
proto.quote.HistoryKLC2S.prototype.setMaxackklnum = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.HistoryKLS2C.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.HistoryKLS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.HistoryKLS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.HistoryKLS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.HistoryKLS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.HistoryKLS2C}
 */
proto.quote.HistoryKLS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.HistoryKLS2C;
  return proto.quote.HistoryKLS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.HistoryKLS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.HistoryKLS2C}
 */
proto.quote.HistoryKLS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.HistoryKLS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.HistoryKLS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.HistoryKLS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.HistoryKLS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security security = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.HistoryKLS2C.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.HistoryKLS2C} returns this
*/
proto.quote.HistoryKLS2C.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.HistoryKLS2C} returns this
 */
proto.quote.HistoryKLS2C.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.HistoryKLS2C.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.KLine list = 2;
 * @return {!Array<!proto.Qot_Common.KLine>}
 */
proto.quote.HistoryKLS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.KLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.KLine>} value
 * @return {!proto.quote.HistoryKLS2C} returns this
*/
proto.quote.HistoryKLS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.KLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.KLine}
 */
proto.quote.HistoryKLS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.KLine, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.HistoryKLS2C} returns this
 */
proto.quote.HistoryKLS2C.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.KLUpdate.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.KLUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.KLUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.KLUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KLUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    rehabtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kltype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    security: (f = msg.getSecurity()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.KLUpdate}
 */
proto.quote.KLUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.KLUpdate;
  return proto.quote.KLUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.KLUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.KLUpdate}
 */
proto.quote.KLUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRehabtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKltype(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 4:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.KLUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.KLUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.KLUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KLUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRehabtype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKltype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 rehabType = 1;
 * @return {number}
 */
proto.quote.KLUpdate.prototype.getRehabtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KLUpdate} returns this
 */
proto.quote.KLUpdate.prototype.setRehabtype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 klType = 2;
 * @return {number}
 */
proto.quote.KLUpdate.prototype.getKltype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KLUpdate} returns this
 */
proto.quote.KLUpdate.prototype.setKltype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Qot_Common.Security security = 3;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.KLUpdate.prototype.getSecurity = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 3));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.KLUpdate} returns this
*/
proto.quote.KLUpdate.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.KLUpdate} returns this
 */
proto.quote.KLUpdate.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.KLUpdate.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Qot_Common.KLine list = 4;
 * @return {!Array<!proto.Qot_Common.KLine>}
 */
proto.quote.KLUpdate.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.KLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.KLine, 4));
};


/**
 * @param {!Array<!proto.Qot_Common.KLine>} value
 * @return {!proto.quote.KLUpdate} returns this
*/
proto.quote.KLUpdate.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.Qot_Common.KLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.KLine}
 */
proto.quote.KLUpdate.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Qot_Common.KLine, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.KLUpdate} returns this
 */
proto.quote.KLUpdate.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.KeepAliveC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.KeepAliveC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.KeepAliveC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KeepAliveC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.KeepAliveC2S}
 */
proto.quote.KeepAliveC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.KeepAliveC2S;
  return proto.quote.KeepAliveC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.KeepAliveC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.KeepAliveC2S}
 */
proto.quote.KeepAliveC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.KeepAliveC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.KeepAliveC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.KeepAliveC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KeepAliveC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 Time = 1;
 * @return {number}
 */
proto.quote.KeepAliveC2S.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KeepAliveC2S} returns this
 */
proto.quote.KeepAliveC2S.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.KeepAliveS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.KeepAliveS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.KeepAliveS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KeepAliveS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.KeepAliveS2C}
 */
proto.quote.KeepAliveS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.KeepAliveS2C;
  return proto.quote.KeepAliveS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.KeepAliveS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.KeepAliveS2C}
 */
proto.quote.KeepAliveS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.KeepAliveS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.KeepAliveS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.KeepAliveS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.KeepAliveS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 Time = 1;
 * @return {number}
 */
proto.quote.KeepAliveS2C.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.KeepAliveS2C} returns this
 */
proto.quote.KeepAliveS2C.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.RiseFallStatisticsC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.RiseFallStatisticsC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.RiseFallStatisticsC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.RiseFallStatisticsC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.RiseFallStatisticsC2S}
 */
proto.quote.RiseFallStatisticsC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.RiseFallStatisticsC2S;
  return proto.quote.RiseFallStatisticsC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.RiseFallStatisticsC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.RiseFallStatisticsC2S}
 */
proto.quote.RiseFallStatisticsC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.RiseFallStatisticsC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.RiseFallStatisticsC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.RiseFallStatisticsC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.RiseFallStatisticsC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 market = 1;
 * @return {number}
 */
proto.quote.RiseFallStatisticsC2S.prototype.getMarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.RiseFallStatisticsC2S} returns this
 */
proto.quote.RiseFallStatisticsC2S.prototype.setMarket = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.RiseFallStatisticsS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.RiseFallStatisticsS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.RiseFallStatisticsS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.RiseFallStatisticsS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    stat: (f = msg.getStat()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.RiseFallStatistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.RiseFallStatisticsS2C}
 */
proto.quote.RiseFallStatisticsS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.RiseFallStatisticsS2C;
  return proto.quote.RiseFallStatisticsS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.RiseFallStatisticsS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.RiseFallStatisticsS2C}
 */
proto.quote.RiseFallStatisticsS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.RiseFallStatistics;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.RiseFallStatistics.deserializeBinaryFromReader);
      msg.setStat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.RiseFallStatisticsS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.RiseFallStatisticsS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.RiseFallStatisticsS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.RiseFallStatisticsS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.RiseFallStatistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.RiseFallStatistics stat = 1;
 * @return {?proto.Qot_Common.RiseFallStatistics}
 */
proto.quote.RiseFallStatisticsS2C.prototype.getStat = function() {
  return /** @type{?proto.Qot_Common.RiseFallStatistics} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.RiseFallStatistics, 1));
};


/**
 * @param {?proto.Qot_Common.RiseFallStatistics|undefined} value
 * @return {!proto.quote.RiseFallStatisticsS2C} returns this
*/
proto.quote.RiseFallStatisticsS2C.prototype.setStat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.RiseFallStatisticsS2C} returns this
 */
proto.quote.RiseFallStatisticsS2C.prototype.clearStat = function() {
  return this.setStat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.RiseFallStatisticsS2C.prototype.hasStat = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SecuritySetC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SecuritySetC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SecuritySetC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SecuritySetC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SecuritySetC2S}
 */
proto.quote.SecuritySetC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SecuritySetC2S;
  return proto.quote.SecuritySetC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SecuritySetC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SecuritySetC2S}
 */
proto.quote.SecuritySetC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarket(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SecuritySetC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SecuritySetC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SecuritySetC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SecuritySetC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 market = 1;
 * @return {number}
 */
proto.quote.SecuritySetC2S.prototype.getMarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.SecuritySetC2S} returns this
 */
proto.quote.SecuritySetC2S.prototype.setMarket = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Qot_Common.PageRequest page = 2;
 * @return {?proto.Qot_Common.PageRequest}
 */
proto.quote.SecuritySetC2S.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageRequest} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest, 2));
};


/**
 * @param {?proto.Qot_Common.PageRequest|undefined} value
 * @return {!proto.quote.SecuritySetC2S} returns this
*/
proto.quote.SecuritySetC2S.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.SecuritySetC2S} returns this
 */
proto.quote.SecuritySetC2S.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.SecuritySetC2S.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.SecuritySetS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SecuritySetS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SecuritySetS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SecuritySetS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SecuritySetS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshotlistList: jspb.Message.toObjectList(msg.getSnapshotlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot.toObject, includeInstance),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SecuritySetS2C}
 */
proto.quote.SecuritySetS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SecuritySetS2C;
  return proto.quote.SecuritySetS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SecuritySetS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SecuritySetS2C}
 */
proto.quote.SecuritySetS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot.deserializeBinaryFromReader);
      msg.addSnapshotlist(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SecuritySetS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SecuritySetS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SecuritySetS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SecuritySetS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshotlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.Snapshot snapshotList = 1;
 * @return {!Array<!proto.Qot_Common.Snapshot>}
 */
proto.quote.SecuritySetS2C.prototype.getSnapshotlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.Snapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Snapshot, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.Snapshot>} value
 * @return {!proto.quote.SecuritySetS2C} returns this
*/
proto.quote.SecuritySetS2C.prototype.setSnapshotlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.Snapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Snapshot}
 */
proto.quote.SecuritySetS2C.prototype.addSnapshotlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.Snapshot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.SecuritySetS2C} returns this
 */
proto.quote.SecuritySetS2C.prototype.clearSnapshotlistList = function() {
  return this.setSnapshotlistList([]);
};


/**
 * optional Qot_Common.PageResponse page = 2;
 * @return {?proto.Qot_Common.PageResponse}
 */
proto.quote.SecuritySetS2C.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageResponse} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse, 2));
};


/**
 * @param {?proto.Qot_Common.PageResponse|undefined} value
 * @return {!proto.quote.SecuritySetS2C} returns this
*/
proto.quote.SecuritySetS2C.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.SecuritySetS2C} returns this
 */
proto.quote.SecuritySetS2C.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.SecuritySetS2C.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.IndustrySetC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.IndustrySetC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.IndustrySetC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.IndustrySetC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.IndustrySetC2S}
 */
proto.quote.IndustrySetC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.IndustrySetC2S;
  return proto.quote.IndustrySetC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.IndustrySetC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.IndustrySetC2S}
 */
proto.quote.IndustrySetC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarket(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.IndustrySetC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.IndustrySetC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.IndustrySetC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.IndustrySetC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 market = 1;
 * @return {number}
 */
proto.quote.IndustrySetC2S.prototype.getMarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.IndustrySetC2S} returns this
 */
proto.quote.IndustrySetC2S.prototype.setMarket = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Qot_Common.PageRequest page = 2;
 * @return {?proto.Qot_Common.PageRequest}
 */
proto.quote.IndustrySetC2S.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageRequest} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest, 2));
};


/**
 * @param {?proto.Qot_Common.PageRequest|undefined} value
 * @return {!proto.quote.IndustrySetC2S} returns this
*/
proto.quote.IndustrySetC2S.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.IndustrySetC2S} returns this
 */
proto.quote.IndustrySetC2S.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.IndustrySetC2S.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.IndustrySetS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.IndustrySetS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.IndustrySetS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.IndustrySetS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.IndustrySetS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    platesetlistList: jspb.Message.toObjectList(msg.getPlatesetlistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateSet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.IndustrySetS2C}
 */
proto.quote.IndustrySetS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.IndustrySetS2C;
  return proto.quote.IndustrySetS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.IndustrySetS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.IndustrySetS2C}
 */
proto.quote.IndustrySetS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateSet;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateSet.deserializeBinaryFromReader);
      msg.addPlatesetlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.IndustrySetS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.IndustrySetS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.IndustrySetS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.IndustrySetS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatesetlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateSet.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.PlateSet plateSetList = 1;
 * @return {!Array<!proto.Qot_Common.PlateSet>}
 */
proto.quote.IndustrySetS2C.prototype.getPlatesetlistList = function() {
  return /** @type{!Array<!proto.Qot_Common.PlateSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateSet, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.PlateSet>} value
 * @return {!proto.quote.IndustrySetS2C} returns this
*/
proto.quote.IndustrySetS2C.prototype.setPlatesetlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.PlateSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.PlateSet}
 */
proto.quote.IndustrySetS2C.prototype.addPlatesetlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.PlateSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.IndustrySetS2C} returns this
 */
proto.quote.IndustrySetS2C.prototype.clearPlatesetlistList = function() {
  return this.setPlatesetlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.PlateSetC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.PlateSetC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.PlateSetC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSetC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: jspb.Message.getFieldWithDefault(msg, 1, 0),
    platesettype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.PlateSetC2S}
 */
proto.quote.PlateSetC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.PlateSetC2S;
  return proto.quote.PlateSetC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.PlateSetC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.PlateSetC2S}
 */
proto.quote.PlateSetC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarket(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatesettype(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.PlateSetC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.PlateSetC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.PlateSetC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSetC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlatesettype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 market = 1;
 * @return {number}
 */
proto.quote.PlateSetC2S.prototype.getMarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.PlateSetC2S} returns this
 */
proto.quote.PlateSetC2S.prototype.setMarket = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 plateSetType = 2;
 * @return {number}
 */
proto.quote.PlateSetC2S.prototype.getPlatesettype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.PlateSetC2S} returns this
 */
proto.quote.PlateSetC2S.prototype.setPlatesettype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Qot_Common.PageRequest page = 3;
 * @return {?proto.Qot_Common.PageRequest}
 */
proto.quote.PlateSetC2S.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageRequest} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest, 3));
};


/**
 * @param {?proto.Qot_Common.PageRequest|undefined} value
 * @return {!proto.quote.PlateSetC2S} returns this
*/
proto.quote.PlateSetC2S.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.PlateSetC2S} returns this
 */
proto.quote.PlateSetC2S.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.PlateSetC2S.prototype.hasPage = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.PlateSetS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.PlateSetS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.PlateSetS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.PlateSetS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSetS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    plateinfolistList: jspb.Message.toObjectList(msg.getPlateinfolistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.PlateSetS2C}
 */
proto.quote.PlateSetS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.PlateSetS2C;
  return proto.quote.PlateSetS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.PlateSetS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.PlateSetS2C}
 */
proto.quote.PlateSetS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateInfo;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateInfo.deserializeBinaryFromReader);
      msg.addPlateinfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.PlateSetS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.PlateSetS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.PlateSetS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSetS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlateinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.PlateInfo plateInfoList = 1;
 * @return {!Array<!proto.Qot_Common.PlateInfo>}
 */
proto.quote.PlateSetS2C.prototype.getPlateinfolistList = function() {
  return /** @type{!Array<!proto.Qot_Common.PlateInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PlateInfo, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.PlateInfo>} value
 * @return {!proto.quote.PlateSetS2C} returns this
*/
proto.quote.PlateSetS2C.prototype.setPlateinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.PlateInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.PlateInfo}
 */
proto.quote.PlateSetS2C.prototype.addPlateinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.PlateInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.PlateSetS2C} returns this
 */
proto.quote.PlateSetS2C.prototype.clearPlateinfolistList = function() {
  return this.setPlateinfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.PlateDetailSetC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.PlateDetailSetC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.PlateDetailSetC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateDetailSetC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: jspb.Message.getFieldWithDefault(msg, 1, 0),
    platesettype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.PlateDetailSetC2S}
 */
proto.quote.PlateDetailSetC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.PlateDetailSetC2S;
  return proto.quote.PlateDetailSetC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.PlateDetailSetC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.PlateDetailSetC2S}
 */
proto.quote.PlateDetailSetC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarket(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatesettype(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.PlateDetailSetC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.PlateDetailSetC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.PlateDetailSetC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateDetailSetC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlatesettype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 market = 1;
 * @return {number}
 */
proto.quote.PlateDetailSetC2S.prototype.getMarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.PlateDetailSetC2S} returns this
 */
proto.quote.PlateDetailSetC2S.prototype.setMarket = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 plateSetType = 2;
 * @return {number}
 */
proto.quote.PlateDetailSetC2S.prototype.getPlatesettype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.PlateDetailSetC2S} returns this
 */
proto.quote.PlateDetailSetC2S.prototype.setPlatesettype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Qot_Common.PageRequest page = 3;
 * @return {?proto.Qot_Common.PageRequest}
 */
proto.quote.PlateDetailSetC2S.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageRequest} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest, 3));
};


/**
 * @param {?proto.Qot_Common.PageRequest|undefined} value
 * @return {!proto.quote.PlateDetailSetC2S} returns this
*/
proto.quote.PlateDetailSetC2S.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.PlateDetailSetC2S} returns this
 */
proto.quote.PlateDetailSetC2S.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.PlateDetailSetC2S.prototype.hasPage = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.PlateDetailSetS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.PlateDetailSetS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.PlateDetailSetS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.PlateDetailSetS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateDetailSetS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    plateinfolistList: jspb.Message.toObjectList(msg.getPlateinfolistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.PlateDetailSetS2C}
 */
proto.quote.PlateDetailSetS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.PlateDetailSetS2C;
  return proto.quote.PlateDetailSetS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.PlateDetailSetS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.PlateDetailSetS2C}
 */
proto.quote.PlateDetailSetS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo.deserializeBinaryFromReader);
      msg.addPlateinfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.PlateDetailSetS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.PlateDetailSetS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.PlateDetailSetS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateDetailSetS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlateinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.StockInfo plateInfoList = 1;
 * @return {!Array<!proto.Qot_Common.StockInfo>}
 */
proto.quote.PlateDetailSetS2C.prototype.getPlateinfolistList = function() {
  return /** @type{!Array<!proto.Qot_Common.StockInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.StockInfo>} value
 * @return {!proto.quote.PlateDetailSetS2C} returns this
*/
proto.quote.PlateDetailSetS2C.prototype.setPlateinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.StockInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.StockInfo}
 */
proto.quote.PlateDetailSetS2C.prototype.addPlateinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.StockInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.PlateDetailSetS2C} returns this
 */
proto.quote.PlateDetailSetS2C.prototype.clearPlateinfolistList = function() {
  return this.setPlateinfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.PlateSecurityC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.PlateSecurityC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.PlateSecurityC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSecurityC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    plate: (f = msg.getPlate()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.PlateSecurityC2S}
 */
proto.quote.PlateSecurityC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.PlateSecurityC2S;
  return proto.quote.PlateSecurityC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.PlateSecurityC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.PlateSecurityC2S}
 */
proto.quote.PlateSecurityC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setPlate(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.PlateSecurityC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.PlateSecurityC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.PlateSecurityC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSecurityC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security plate = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.PlateSecurityC2S.prototype.getPlate = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.PlateSecurityC2S} returns this
*/
proto.quote.PlateSecurityC2S.prototype.setPlate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.PlateSecurityC2S} returns this
 */
proto.quote.PlateSecurityC2S.prototype.clearPlate = function() {
  return this.setPlate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.PlateSecurityC2S.prototype.hasPlate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Qot_Common.PageRequest page = 2;
 * @return {?proto.Qot_Common.PageRequest}
 */
proto.quote.PlateSecurityC2S.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageRequest} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest, 2));
};


/**
 * @param {?proto.Qot_Common.PageRequest|undefined} value
 * @return {!proto.quote.PlateSecurityC2S} returns this
*/
proto.quote.PlateSecurityC2S.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.PlateSecurityC2S} returns this
 */
proto.quote.PlateSecurityC2S.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.PlateSecurityC2S.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.PlateSecurityS2C.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.PlateSecurityS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.PlateSecurityS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.PlateSecurityS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSecurityS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    plate: (f = msg.getPlate()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject(includeInstance, f),
    stockinfolistList: jspb.Message.toObjectList(msg.getStockinfolistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo.toObject, includeInstance),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.PlateSecurityS2C}
 */
proto.quote.PlateSecurityS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.PlateSecurityS2C;
  return proto.quote.PlateSecurityS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.PlateSecurityS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.PlateSecurityS2C}
 */
proto.quote.PlateSecurityS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.setPlate(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo.deserializeBinaryFromReader);
      msg.addStockinfolist(value);
      break;
    case 3:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.PlateSecurityS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.PlateSecurityS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.PlateSecurityS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.PlateSecurityS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
  f = message.getStockinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.Security plate = 1;
 * @return {?proto.Qot_Common.Security}
 */
proto.quote.PlateSecurityS2C.prototype.getPlate = function() {
  return /** @type{?proto.Qot_Common.Security} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {?proto.Qot_Common.Security|undefined} value
 * @return {!proto.quote.PlateSecurityS2C} returns this
*/
proto.quote.PlateSecurityS2C.prototype.setPlate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.PlateSecurityS2C} returns this
 */
proto.quote.PlateSecurityS2C.prototype.clearPlate = function() {
  return this.setPlate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.PlateSecurityS2C.prototype.hasPlate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Qot_Common.StockInfo stockInfoList = 2;
 * @return {!Array<!proto.Qot_Common.StockInfo>}
 */
proto.quote.PlateSecurityS2C.prototype.getStockinfolistList = function() {
  return /** @type{!Array<!proto.Qot_Common.StockInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.StockInfo, 2));
};


/**
 * @param {!Array<!proto.Qot_Common.StockInfo>} value
 * @return {!proto.quote.PlateSecurityS2C} returns this
*/
proto.quote.PlateSecurityS2C.prototype.setStockinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Qot_Common.StockInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.StockInfo}
 */
proto.quote.PlateSecurityS2C.prototype.addStockinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Qot_Common.StockInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.PlateSecurityS2C} returns this
 */
proto.quote.PlateSecurityS2C.prototype.clearStockinfolistList = function() {
  return this.setStockinfolistList([]);
};


/**
 * optional Qot_Common.PageResponse page = 3;
 * @return {?proto.Qot_Common.PageResponse}
 */
proto.quote.PlateSecurityS2C.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageResponse} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse, 3));
};


/**
 * @param {?proto.Qot_Common.PageResponse|undefined} value
 * @return {!proto.quote.PlateSecurityS2C} returns this
*/
proto.quote.PlateSecurityS2C.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.PlateSecurityS2C} returns this
 */
proto.quote.PlateSecurityS2C.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.PlateSecurityS2C.prototype.hasPage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.OwnerPlateC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.OwnerPlateC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.OwnerPlateC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OwnerPlateC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylist: (f = msg.getSecuritylist()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.OwnerPlateC2S}
 */
proto.quote.OwnerPlateC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.OwnerPlateC2S;
  return proto.quote.OwnerPlateC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.OwnerPlateC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.OwnerPlateC2S}
 */
proto.quote.OwnerPlateC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.deserializeBinaryFromReader);
      msg.setSecuritylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.OwnerPlateC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.OwnerPlateC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.OwnerPlateC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OwnerPlateC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.serializeBinaryToWriter
    );
  }
};


/**
 * optional Qot_Common.SecurityList securityList = 1;
 * @return {?proto.Qot_Common.SecurityList}
 */
proto.quote.OwnerPlateC2S.prototype.getSecuritylist = function() {
  return /** @type{?proto.Qot_Common.SecurityList} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList, 1));
};


/**
 * @param {?proto.Qot_Common.SecurityList|undefined} value
 * @return {!proto.quote.OwnerPlateC2S} returns this
*/
proto.quote.OwnerPlateC2S.prototype.setSecuritylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.OwnerPlateC2S} returns this
 */
proto.quote.OwnerPlateC2S.prototype.clearSecuritylist = function() {
  return this.setSecuritylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.OwnerPlateC2S.prototype.hasSecuritylist = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.OwnerPlateS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.OwnerPlateS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.OwnerPlateS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.OwnerPlateS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OwnerPlateS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityOwnerPlate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.OwnerPlateS2C}
 */
proto.quote.OwnerPlateS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.OwnerPlateS2C;
  return proto.quote.OwnerPlateS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.OwnerPlateS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.OwnerPlateS2C}
 */
proto.quote.OwnerPlateS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityOwnerPlate;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityOwnerPlate.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.OwnerPlateS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.OwnerPlateS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.OwnerPlateS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.OwnerPlateS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityOwnerPlate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.SecurityOwnerPlate list = 1;
 * @return {!Array<!proto.Qot_Common.SecurityOwnerPlate>}
 */
proto.quote.OwnerPlateS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.SecurityOwnerPlate>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityOwnerPlate, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.SecurityOwnerPlate>} value
 * @return {!proto.quote.OwnerPlateS2C} returns this
*/
proto.quote.OwnerPlateS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.SecurityOwnerPlate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.SecurityOwnerPlate}
 */
proto.quote.OwnerPlateS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.SecurityOwnerPlate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.OwnerPlateS2C} returns this
 */
proto.quote.OwnerPlateS2C.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.NewSecurityListC2S.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.NewSecurityListC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.NewSecurityListC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.NewSecurityListC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityListC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylistList: jspb.Message.toObjectList(msg.getSecuritylistList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.NewSecurityListC2S}
 */
proto.quote.NewSecurityListC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.NewSecurityListC2S;
  return proto.quote.NewSecurityListC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.NewSecurityListC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.NewSecurityListC2S}
 */
proto.quote.NewSecurityListC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.Security;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.deserializeBinaryFromReader);
      msg.addSecuritylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.NewSecurityListC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.NewSecurityListC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.NewSecurityListC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityListC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.Security.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.Security securityList = 1;
 * @return {!Array<!proto.Qot_Common.Security>}
 */
proto.quote.NewSecurityListC2S.prototype.getSecuritylistList = function() {
  return /** @type{!Array<!proto.Qot_Common.Security>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.Security, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.Security>} value
 * @return {!proto.quote.NewSecurityListC2S} returns this
*/
proto.quote.NewSecurityListC2S.prototype.setSecuritylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.Security=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.Security}
 */
proto.quote.NewSecurityListC2S.prototype.addSecuritylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.Security, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.NewSecurityListC2S} returns this
 */
proto.quote.NewSecurityListC2S.prototype.clearSecuritylistList = function() {
  return this.setSecuritylistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.NewSecurityListS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.NewSecurityListS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.NewSecurityListS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.NewSecurityListS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityListS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.NewSecurityListS2C}
 */
proto.quote.NewSecurityListS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.NewSecurityListS2C;
  return proto.quote.NewSecurityListS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.NewSecurityListS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.NewSecurityListS2C}
 */
proto.quote.NewSecurityListS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.NewSecurityListS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.NewSecurityListS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.NewSecurityListS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityListS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.NewSecurityDetail list = 1;
 * @return {!Array<!proto.Qot_Common.NewSecurityDetail>}
 */
proto.quote.NewSecurityListS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.NewSecurityDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.NewSecurityDetail>} value
 * @return {!proto.quote.NewSecurityListS2C} returns this
*/
proto.quote.NewSecurityListS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.NewSecurityDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.NewSecurityDetail}
 */
proto.quote.NewSecurityListS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.NewSecurityDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.NewSecurityListS2C} returns this
 */
proto.quote.NewSecurityListS2C.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.NewSecurityRankC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.NewSecurityRankC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.NewSecurityRankC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityRankC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.NewSecurityRankC2S}
 */
proto.quote.NewSecurityRankC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.NewSecurityRankC2S;
  return proto.quote.NewSecurityRankC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.NewSecurityRankC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.NewSecurityRankC2S}
 */
proto.quote.NewSecurityRankC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarket(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.NewSecurityRankC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.NewSecurityRankC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.NewSecurityRankC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityRankC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 market = 1;
 * @return {number}
 */
proto.quote.NewSecurityRankC2S.prototype.getMarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.NewSecurityRankC2S} returns this
 */
proto.quote.NewSecurityRankC2S.prototype.setMarket = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Qot_Common.PageRequest page = 2;
 * @return {?proto.Qot_Common.PageRequest}
 */
proto.quote.NewSecurityRankC2S.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageRequest} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageRequest, 2));
};


/**
 * @param {?proto.Qot_Common.PageRequest|undefined} value
 * @return {!proto.quote.NewSecurityRankC2S} returns this
*/
proto.quote.NewSecurityRankC2S.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.NewSecurityRankC2S} returns this
 */
proto.quote.NewSecurityRankC2S.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.NewSecurityRankC2S.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.NewSecurityRankS2C.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.NewSecurityRankS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.NewSecurityRankS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.NewSecurityRankS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityRankS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail.toObject, includeInstance),
    page: (f = msg.getPage()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.NewSecurityRankS2C}
 */
proto.quote.NewSecurityRankS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.NewSecurityRankS2C;
  return proto.quote.NewSecurityRankS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.NewSecurityRankS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.NewSecurityRankS2C}
 */
proto.quote.NewSecurityRankS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.NewSecurityRankS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.NewSecurityRankS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.NewSecurityRankS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.NewSecurityRankS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Qot_Common.NewSecurityDetail list = 1;
 * @return {!Array<!proto.Qot_Common.NewSecurityDetail>}
 */
proto.quote.NewSecurityRankS2C.prototype.getListList = function() {
  return /** @type{!Array<!proto.Qot_Common.NewSecurityDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.NewSecurityDetail, 1));
};


/**
 * @param {!Array<!proto.Qot_Common.NewSecurityDetail>} value
 * @return {!proto.quote.NewSecurityRankS2C} returns this
*/
proto.quote.NewSecurityRankS2C.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Qot_Common.NewSecurityDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Qot_Common.NewSecurityDetail}
 */
proto.quote.NewSecurityRankS2C.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Qot_Common.NewSecurityDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.NewSecurityRankS2C} returns this
 */
proto.quote.NewSecurityRankS2C.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional Qot_Common.PageResponse page = 2;
 * @return {?proto.Qot_Common.PageResponse}
 */
proto.quote.NewSecurityRankS2C.prototype.getPage = function() {
  return /** @type{?proto.Qot_Common.PageResponse} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.PageResponse, 2));
};


/**
 * @param {?proto.Qot_Common.PageResponse|undefined} value
 * @return {!proto.quote.NewSecurityRankS2C} returns this
*/
proto.quote.NewSecurityRankS2C.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.NewSecurityRankS2C} returns this
 */
proto.quote.NewSecurityRankS2C.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.NewSecurityRankS2C.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgseq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msgtype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    c2s: msg.getC2s_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.Request}
 */
proto.quote.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.Request;
  return proto.quote.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.Request}
 */
proto.quote.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMsgseq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsgtype(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setC2s(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgseq();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMsgtype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getC2s_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional int64 msgSeq = 1;
 * @return {number}
 */
proto.quote.Request.prototype.getMsgseq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.Request} returns this
 */
proto.quote.Request.prototype.setMsgseq = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 msgType = 2;
 * @return {number}
 */
proto.quote.Request.prototype.getMsgtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.Request} returns this
 */
proto.quote.Request.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes c2s = 3;
 * @return {!(string|Uint8Array)}
 */
proto.quote.Request.prototype.getC2s = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes c2s = 3;
 * This is a type-conversion wrapper around `getC2s()`
 * @return {string}
 */
proto.quote.Request.prototype.getC2s_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getC2s()));
};


/**
 * optional bytes c2s = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getC2s()`
 * @return {!Uint8Array}
 */
proto.quote.Request.prototype.getC2s_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getC2s()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quote.Request} returns this
 */
proto.quote.Request.prototype.setC2s = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgseq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msgtype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    restype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resmsg: jspb.Message.getFieldWithDefault(msg, 4, ""),
    errcode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    s2c: msg.getS2c_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.Response}
 */
proto.quote.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.Response;
  return proto.quote.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.Response}
 */
proto.quote.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMsgseq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsgtype(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRestype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResmsg(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrcode(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setS2c(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgseq();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMsgtype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRestype();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getResmsg();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getErrcode();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getS2c_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional int64 msgSeq = 1;
 * @return {number}
 */
proto.quote.Response.prototype.getMsgseq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.Response} returns this
 */
proto.quote.Response.prototype.setMsgseq = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 msgType = 2;
 * @return {number}
 */
proto.quote.Response.prototype.getMsgtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.Response} returns this
 */
proto.quote.Response.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 resType = 3;
 * @return {number}
 */
proto.quote.Response.prototype.getRestype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.Response} returns this
 */
proto.quote.Response.prototype.setRestype = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string resMsg = 4;
 * @return {string}
 */
proto.quote.Response.prototype.getResmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quote.Response} returns this
 */
proto.quote.Response.prototype.setResmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 errCode = 5;
 * @return {number}
 */
proto.quote.Response.prototype.getErrcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.Response} returns this
 */
proto.quote.Response.prototype.setErrcode = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes s2c = 6;
 * @return {!(string|Uint8Array)}
 */
proto.quote.Response.prototype.getS2c = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes s2c = 6;
 * This is a type-conversion wrapper around `getS2c()`
 * @return {string}
 */
proto.quote.Response.prototype.getS2c_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getS2c()));
};


/**
 * optional bytes s2c = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getS2c()`
 * @return {!Uint8Array}
 */
proto.quote.Response.prototype.getS2c_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getS2c()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quote.Response} returns this
 */
proto.quote.Response.prototype.setS2c = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.InitConnectC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.InitConnectC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.InitConnectC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.InitConnectC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rsa: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.InitConnectC2S}
 */
proto.quote.InitConnectC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.InitConnectC2S;
  return proto.quote.InitConnectC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.InitConnectC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.InitConnectC2S}
 */
proto.quote.InitConnectC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRsa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.InitConnectC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.InitConnectC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.InitConnectC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.InitConnectC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRsa();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string clientID = 1;
 * @return {string}
 */
proto.quote.InitConnectC2S.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quote.InitConnectC2S} returns this
 */
proto.quote.InitConnectC2S.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 userID = 2;
 * @return {number}
 */
proto.quote.InitConnectC2S.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.InitConnectC2S} returns this
 */
proto.quote.InitConnectC2S.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string rsa = 3;
 * @return {string}
 */
proto.quote.InitConnectC2S.prototype.getRsa = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quote.InitConnectC2S} returns this
 */
proto.quote.InitConnectC2S.prototype.setRsa = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.InitConnectS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.InitConnectS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.InitConnectS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.InitConnectS2C.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverver: jspb.Message.getFieldWithDefault(msg, 1, 0),
    loginuserid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    connid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    connaeskey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    keepaliveinterval: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.InitConnectS2C}
 */
proto.quote.InitConnectS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.InitConnectS2C;
  return proto.quote.InitConnectS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.InitConnectS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.InitConnectS2C}
 */
proto.quote.InitConnectS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerver(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLoginuserid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setConnid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnaeskey(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKeepaliveinterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.InitConnectS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.InitConnectS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.InitConnectS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.InitConnectS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerver();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLoginuserid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getConnid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getConnaeskey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKeepaliveinterval();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 serverVer = 1;
 * @return {number}
 */
proto.quote.InitConnectS2C.prototype.getServerver = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.InitConnectS2C} returns this
 */
proto.quote.InitConnectS2C.prototype.setServerver = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 loginUserID = 2;
 * @return {number}
 */
proto.quote.InitConnectS2C.prototype.getLoginuserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.InitConnectS2C} returns this
 */
proto.quote.InitConnectS2C.prototype.setLoginuserid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 connID = 3;
 * @return {number}
 */
proto.quote.InitConnectS2C.prototype.getConnid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.InitConnectS2C} returns this
 */
proto.quote.InitConnectS2C.prototype.setConnid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string connAESKey = 4;
 * @return {string}
 */
proto.quote.InitConnectS2C.prototype.getConnaeskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quote.InitConnectS2C} returns this
 */
proto.quote.InitConnectS2C.prototype.setConnaeskey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 keepAliveInterval = 5;
 * @return {number}
 */
proto.quote.InitConnectS2C.prototype.getKeepaliveinterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.InitConnectS2C} returns this
 */
proto.quote.InitConnectS2C.prototype.setKeepaliveinterval = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quote.SubC2S.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SubC2S.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SubC2S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SubC2S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SubC2S.toObject = function(includeInstance, msg) {
  var f, obj = {
    securitylist: (f = msg.getSecuritylist()) && mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.toObject(includeInstance, f),
    subtypelistList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    issuborunsub: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    regpushrehabtypelist: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isunsuball: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SubC2S}
 */
proto.quote.SubC2S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SubC2S;
  return proto.quote.SubC2S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SubC2S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SubC2S}
 */
proto.quote.SubC2S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList;
      reader.readMessage(value,mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.deserializeBinaryFromReader);
      msg.setSecuritylist(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSubtypelist(values[i]);
      }
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuborunsub(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRegpushrehabtypelist(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsunsuball(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SubC2S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SubC2S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SubC2S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SubC2S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecuritylist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList.serializeBinaryToWriter
    );
  }
  f = message.getSubtypelistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getIssuborunsub();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRegpushrehabtypelist();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsunsuball();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional Qot_Common.SecurityList securityList = 1;
 * @return {?proto.Qot_Common.SecurityList}
 */
proto.quote.SubC2S.prototype.getSecuritylist = function() {
  return /** @type{?proto.Qot_Common.SecurityList} */ (
    jspb.Message.getWrapperField(this, mmk$mds_proto_Qot_Common_Qot_Common_pb.SecurityList, 1));
};


/**
 * @param {?proto.Qot_Common.SecurityList|undefined} value
 * @return {!proto.quote.SubC2S} returns this
*/
proto.quote.SubC2S.prototype.setSecuritylist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.clearSecuritylist = function() {
  return this.setSecuritylist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quote.SubC2S.prototype.hasSecuritylist = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int32 subTypeList = 2;
 * @return {!Array<number>}
 */
proto.quote.SubC2S.prototype.getSubtypelistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.setSubtypelistList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.addSubtypelist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.clearSubtypelistList = function() {
  return this.setSubtypelistList([]);
};


/**
 * optional bool isSubOrUnSub = 3;
 * @return {boolean}
 */
proto.quote.SubC2S.prototype.getIssuborunsub = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.setIssuborunsub = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 regPushRehabTypeList = 4;
 * @return {number}
 */
proto.quote.SubC2S.prototype.getRegpushrehabtypelist = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.setRegpushrehabtypelist = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool isUnsubAll = 5;
 * @return {boolean}
 */
proto.quote.SubC2S.prototype.getIsunsuball = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quote.SubC2S} returns this
 */
proto.quote.SubC2S.prototype.setIsunsuball = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quote.SubS2C.prototype.toObject = function(opt_includeInstance) {
  return proto.quote.SubS2C.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quote.SubS2C} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SubS2C.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quote.SubS2C}
 */
proto.quote.SubS2C.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quote.SubS2C;
  return proto.quote.SubS2C.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quote.SubS2C} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quote.SubS2C}
 */
proto.quote.SubS2C.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quote.SubS2C.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quote.SubS2C.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quote.SubS2C} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quote.SubS2C.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.quote.ResType = {
  RESTYPE_SUCCEED: 0,
  RESTYPE_FAILED: -1,
  RESTYPE_TIMEOUT: -100,
  RESTYPE_UNKNOWN: -400
};

/**
 * @enum {number}
 */
proto.quote.MsgType = {
  MSGTYPE_UNKNOWN: 0,
  MSGTYPE_KEEPALIVE: 1,
  MSGTYPE_INITCONNECT: 1001,
  MSGTYPE_GETGLOBALSTATE: 1002,
  MSGTYPE_SUB: 3001,
  MSGTYPE_UPDATEMARKETSTATE: 3002,
  MSGTYPE_UPDATEBASICQOT: 3005,
  MSGTYPE_UPDATEASKBID1: 3016,
  MSGTYPE_UPDATELASTCLOSEPRICE: 3017,
  MSGTYPE_UPDATEORDERBOOK: 3013,
  MSGTYPE_UPDATEKL: 3007,
  MSGTYPE_UPDATERT: 3009,
  MSGTYPE_UPDATETICKER: 3011,
  MSGTYPE_UPDATEBROKER: 3015,
  MSGTYPE_GETMARKETSTATE: 3223,
  MSGTYPE_GETRISEFALLSTATISTICS: 3226,
  MSGTYPE_GETBASICQOT: 3004,
  MSGTYPE_GETRT: 3008,
  MSGTYPE_GETKL: 3006,
  MSGTYPE_GETTICKER: 3010,
  MSGTYPE_GETORDERBOOK: 3012,
  MSGTYPE_GETBROKER: 3014,
  MSGTYPE_GETSECURITYSNAPSHOT: 3203,
  MSGTYPE_GETHISTORYKL: 3103,
  MSGTYPE_GETNEWSECURITY: 3104,
  MSGTYPE_GETRTLIST: 3050,
  MSGTYPE_GETSECURITYSET: 3201,
  MSGTYPE_GETPLATESET: 3204,
  MSGTYPE_GETPLATEDETAILSET: 3209,
  MSGTYPE_GETPLATESECURITY: 3205,
  MSGTYPE_GETOWNERPLATE: 3207,
  MSGTYPE_GETINDUSTRYSET: 3208,
  MSGTYPE_GETBMPSECURITYSNAPSHOT: 3301,
  MSGTYPE_GETBMPBASICQOT: 3302
};

goog.object.extend(exports, proto.quote);
